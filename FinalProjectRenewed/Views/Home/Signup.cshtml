@model FinalProject.Models.ViewModels.UserSignUpViewModel
@using FinalProject.Models
@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Signup","Home",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
   
        User u1 = (User)ViewBag.user;
    

    <div class="form-horizontal card white w3-card-8 col-4 offset-4 col-md-4 col-sm-4">
        <h2 class="card-header text-white bg-primary">
            Sign Up
        </h2>
        <div id="page1">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group pl-3 pt-2 pr-3 pb-2">
                <label for="Name">Name:</label>
                @Html.EditorFor(model => model.user.Name, new { htmlAttributes = new { @class = "form-control", @type = "text", @value=u1.Name } })
                @*!-- <input type="text" class="form-control" id="User.Name" name="Name" placeholder="Enter Your Name">--!*@
            </div>
            <div class="form-group pl-3 pr-3 pb-2">
                <label for="Email">Email:</label>
                @Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "form-control", @type = "email",@value=u1.Email } })
                @*<input type="email" class="form-control" id="Email" name="Email" placeholder="email@example.com">*@
            </div>

            <div class="form-group pl-3 pr-3 pb-2">
                <label for="Password">Password:</label>
                @Html.EditorFor(model => model.user.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @*<input type="password" class="form-control" id="Password" name="Password">*@
            </div>

            <div class="form-group pl-3 pr-3 pb-2">
                <label for="DateOfBirth">Enter Your Date Of Birth:</label>
                @Html.EditorFor(model => model.user.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @*<input type="date" class="form-control" id="DateOfBirth" name="DateOfBirth" placeholder="04/03/1995">*@
          <input type="button" class="btn mt-4 mb-4 btn-outline-primary btn-lg btn-block" onclick="pageChange()" id="page" value="Next" />
            </div>
            
        </div>
        <div id="page2" >
            <div class="form-group pl-3 pr-3 pb-2">
                <label for="City">Enter Your City:</label>
                @Html.EditorFor(model => model.user.City, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                @*<input type="text" class="form-control" id="City" name="City" placeholder="Gujranwala">*@
            </div>


            <div class="form-group pl-3 pr-3 pb-2">
                <label>Select Your Gender:</label>
                <div class="form-row ">
                    <div class="pretty p-default p-round p-thick">
                        <div class="form-check form-check-inline">
                            @*@Html.EditorFor(model => model.user.Sex, new { htmlAttributes = new { @class = "form-control", @type = "radio" ,@value="true" },@checked="checked" })*@
                            <input type="radio" class="form-check-input" name="user.Sex" id="user_Sex" checked value="True">
                            <div class="state p-primary-o">
                                <label class="form-check-label" for="user.Sex">Male</label>
                            </div>
                        </div>
                    </div>
                    <div class="pretty p-default p-round p-thick">
                        <div class="form-check form-check-inline">
                            @*@Html.EditorFor(model => model.user.Sex, new { htmlAttributes = new { @class = "form-control", @type = "radio" } })*@
                            <input type="radio" class="form-check-input" name="user.Sex" id="user.Sex" value="False">
                            <div class="state p-primary-o">
                                <label class="form-check-label" for="user.Sex">Female</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group pl-3 pr-3 pb-2">
                <label>Marital Status:</label>
                <div class="form-row ">
                    <div class=" pretty p-default p-round p-thick">
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="user.IsMarried" id="user_IsMarred" checked value="True">
                            <div class="state p-primary-o">
                                <label class="form-check-label" for="user.IsMarried">Married</label>
                            </div>
                        </div>
                    </div>
                    <div class="pretty p-default p-round p-thick ">
                        <div class="form-check form-check-inline ">
                            <input class="form-check-input" type="radio" name="user.IsMarried" id="user_IsMarried" value="False">
                            <div class="state p-primary-o">
                                <label class="form-check-label" for="user.IsMarried">Not-Married</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group pl-3 pr-3 pb-2">
                <label for="image">Upload Profile Picture:</label>
                <input type="file" name="image" id="image" class="form-control" />
                @*@Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control", @type = "file" } })*@
                @*<input type="date" class="form-control" id="DateOfBirth" name="DateOfBirth" placeholder="04/03/1995">*@
            </div>
            <input type="date" hidden name="JoinDate" value="@DateTime.Now" id="JoinDate" />

            @*<div class="form-group">
                @Html.LabelFor(model => model.IsMarried, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsMarried)
                        @Html.ValidationMessageFor(model => model.IsMarried, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Sex)
                        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>*@



            @*<div class="form-group">
                @Html.LabelFor(model => model.JoinDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                </div>
            </div>*@



            <input type="submit" value="Sign Up!" class="btn mt-4 mb-4 btn-outline-primary btn-lg btn-block" />
        </div>
    </div>
}
<script>
    document.getElementById('page2').style.display = 'none';
    function pageChange() {
        document.getElementById('page1').style.display = "none";
        document.getElementById('page2').style.display = 'block';
    }
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
