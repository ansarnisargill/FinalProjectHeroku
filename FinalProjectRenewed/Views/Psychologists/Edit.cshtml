@model FinalProject.Models.Psychologist

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div  class="form-horizontal card white w3-card-8 col-lg-4 offset-4 col-md-4 col-sm-4">
        <h4>Psychologist</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)



        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
           
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PsyTypeID, "PsyTypeID", htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("PsyTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PsyTypeID, "", new { @class = "text-danger" })
            </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
            </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
            </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JoinDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            
                <input type="submit" value="Save" class="btn btn-lg btn-success col-lg-4 offset-4" />
           
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
